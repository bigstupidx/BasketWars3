/**
 * Copyright (C) 2013-2014 TrialPay, Inc. All Rights Reserved
 */
using System;

public enum TrialpayViewMode:int {Fullscreen=1, Popup=2};

/**
     This is the class used to perform all SDK tasks.

     Terminology:
     - <b>User</b>: the user that is using the app on the device.
     - <b>VIC</b>: the campaign identification, also called "Integration Code". Find it on your Merchant page/Products, the item "Get integration code" under every campaign.
     - <b>SID</b>: an unique device user identification. Its preferably provided by you, but can be generated by Trialpay.
     - <b>Touchpoint</b>: identifies the button that was clicked to open the Offer Wall - the name is your choice.


     @see <a href="http://help.trialpay.com/mobile/ios-sdk">Integrating the TrialPay SDK into an iOS app</a>
     @see @ref SampleIntegration
*/
public interface ITrialpayIntegration {

/**
     @return the Trialpay SDK version name.
*/	
	string getSdkVersion();

/** Set verbosity (iOS Only, ignored on Android) */
	void setVerbose(bool verbose);

/**
     Set SID (device user identification). The SID is an unique user id for each device user. It will be used to uniquely identify your user with Trialpay system for monetization and customer support purposes.
     If you do not maintain a unique user id, we define one for the user by hashing different device identifiers such as IDFA and the deviceâ€™s MAC address. Please note that choosing this path will prevent us from sending you server side notifications about your users activities.
     Therefore, for completion notification, please make sure to initiate the Balance Check.
    @param sid The device user identifier.
*/
	void setSid(string sid);

/**
    Register your VIC (campaign identification) - the campaign integration code, a 32 Hex string that is being used in order to uniquely define your touchpoint.
    This is required to make this touchpoint available.
    @param vic The campaign identifier.
    @param touchpointName The touchpoint to register.
*/
	void registerVic(string touchpointName, string vic);
	
/**
    Delegate for Offerwall open/close events and balance update events.
    @param objectName the object.
    @param methodName the method.
 */
	void registerUnitySendMessage(string objectName, string methodName);
	
/**
    Open the Trialpay Offer Wall for a given touchpoint.
    @param touchpointName The touchpoint.
*/
	void open(string touchpointName);

/**
    Open the Trialpay Offer Wall for a given touchpoint.
    @param touchpointName The touchpoint.
    @param mode Fullscreen or Popup.
*/
	void open(string touchpointName, TrialpayViewMode mode);
	
/**
    Initiate balance checks. Call this method only once, within your application:didFinishLaunchingWithOptions:.
    @note Only start balance checks if you enabled the Balance Check API
*/
	void initiateBalanceChecks();

/**
    Withdraw a differential balance for a given touchpoint.
    @note The differential balance is only what was earned, it does NOT refer to the total balance the user ever received.
    @param touchpointName The touchpoint to withdraw from.
    @return The differential balance the device user received.
*/
	int withdrawBalance(string touchpointName);



/** 
    Start availability checks. Call this method only once, when your app starts
    @param touchpointName The touchpoint.
*/
        void startAvailabilityCheck(string touchpointName);

/**
    Check if a touchpoint is available.
    @param touchpointName The touchpoint
    @return true if the touchpoint was correctly registered and there's content available for it
*/
        bool isAvailable(string touchpointName);
	
/**
    Set the age of the device user. Affects all touchpoints.
    This method should be called on device user registration or during initialization.
    @param age The age of device user.
*/
	void setAge(int age);

/**
    Set the gender of the device user. Affects all touchpoints.
    This method should be called on device user registration or during initialization.
    @param gender The gender of the device user. Values can be Female, Male or Unknown
 */
	void setGender(char gender);

/**
    Set the level of the user on this game. Affects all touchpoints.
    This method should be called whenever there's a level/stage update in the game (showing the maximum enabled level for the user). Can be called right before the touchpoint is being loaded.
    @param level The new level of the device user.
 */
	void updateLevel(int level);

/**
    This method stores custom parameters. All set parameters (even if they have a value of an empty string) will be passed on API calls.
    If the paramValue is set to Null, the passed value will be "" (empty string).
    @param paramValue The value of the parameter.
    @param paramName The name of the parameter.
*/
	void setCustomParam(string paramName, string paramValue);

/**
    This method clears custom parameters.
    @param paramName The name of the parameter to clear.
 */
	void clearCustomParam(string paramName);

/**
    Stores, for each touchpoint and aggregate the dollarAmount and vcAmount.
    This method should be called by the developer when an IAP purchase is done.
    It allows to track the life time dollar amount spent by that device user and the life time virtual currency amount purchased.
    It should also be used if the device user can gain virtual currency in the game without purchasing it (dollarAmount can be 0)

    @param touchpointName The touchpoint that is getting credited.
    @param vcAmount The amount of virtual currency to add to the balance.
    @param dollarAmount The amount of currency (dollars) to add to the balance.
 */
	void updateVcPurchaseInfo(string touchpointName, float dollarAmount, int vcAmount);

/**
    Should be called whenever there's a virtual currency activity (or right before the touchpoint is being loaded)
    @param vcAmount The amount of virtual currency to add to the balance.
    @param touchpointName The touchpoint that is getting credited.
 */
	void updateVcBalance(string touchpointName, int vcAmount);

/**
    Open the Trialpay Offer Wall for a given touchpoint.
    @param vic The campaign identifier.
    @param sid The device user identifier.
    @deprecated use openForTouchpoint()
*/
    void openOfferwall(string vic, string sid);

/**
    Open the Trialpay Offer Wall for a given touchpoint.
    @param touchpointName The touchpoint that is getting credited.
    @deprecated use openForTouchpoint()
*/
    void openOfferwallForTouchpoint(string touchpointName);

/**
    Start balance checks. Call this method only once, within your application:didFinishLaunchingWithOptions:.
    @note Only start balance checks if you enabled the Balance Check API
    @deprecated use openForTouchpoint()
*/
	void enableBalanceCheck();
}

